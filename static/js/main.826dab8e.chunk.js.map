{"version":3,"sources":["LongestArray.js","ConversionData.js","App.js","index.js"],"names":["LongestArray","props","currRates","Object","values","outputConversions","sort","forEach","rate","i","length","Math","abs","toFixed","pop","longestArr","ConversionsData","entries","currencyRates","key","value","includes","selectedOption","toUpperCase","hasOwnProperty","group1","group2","group3","a","b","map","entry","className","colSpan","keys","App","currs","useState","setSelectedOption","isPending","setIsPending","errorM","setErrorM","status","setStatus","setCurrencyRates","ratesDetails","currentDate","Date","toLocaleString","year","month","day","useEffect","localStorage","getItem","JSON","parse","j","fetch","then","res","ok","Error","json","data","currKey","catch","err","message","setItem","stringify","htmlFor","name","id","defaultValue","onChange","e","target","curr","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAoBeA,EApBM,SAACC,GAclB,OACI,6IACyC,4BAf1B,WACf,IAAIC,EAAYC,OAAOC,OAAOH,EAAMI,mBAAmBC,OASvD,OARAJ,EAAUK,SAAQ,SAAAC,GACd,IAAK,IAAIC,EAAIP,EAAUQ,OAAS,EAAGD,GAAK,EAAGA,IACnCE,KAAKC,IAAIV,EAAUO,GAAGI,QAAQ,GAAKL,EAAKK,QAAQ,KAAO,IACvDX,EAAUY,SAKfZ,EAAUQ,OAK4BK,KAD7C,QCkHOC,EA/HS,SAACf,GAErB,IADA,IAAII,EAAoB,GACxB,MAAyBF,OAAOc,QAAQhB,EAAMiB,eAA9C,eAA8D,CAAzD,0BAAKC,EAAL,KAAUC,EAAV,KACGD,EAAIE,SAASpB,EAAMqB,eAAeC,iBAC7BlB,EAAkBmB,eAAevB,EAAMqB,eAAeC,eAGvDlB,EAAiB,2BAAOA,GAAP,kBAA2Bc,EAAMC,IAFlDf,EAAkBc,GAAOC,GAOrC,IAAIK,EAAS,GACTC,EAAS,GACTC,EAAS,GAgBb,OAdAxB,OAAOc,QAAQZ,GAAmBC,MAAK,SAACsB,EAAGC,GACvC,OAAOD,EAAE,GAAKC,EAAE,MACjBC,KAAI,SAAAC,GACH,OAAIA,EAAM,GAAGlB,QAAQ,GAAK,EAChBY,EAAOM,EAAM,IAAMA,EAAM,GACxBA,EAAM,GAAGlB,QAAQ,IAAM,GAAKkB,EAAM,GAAGlB,QAAQ,GAAK,IACnDa,EAAOK,EAAM,IAAMA,EAAM,GACxBA,EAAM,GAAGlB,QAAQ,IAAM,IACxBc,EAAOI,EAAM,IAAMA,EAAM,GAExB,QAKX,0BAASC,UAAU,cAAnB,UACI,kCACI,kCACI,oBAAIA,UAAU,gBAAd,SACI,oBAAIC,QAAQ,IAAZ,sCAEJ,qBAAID,UAAU,eAAd,UACI,4CACA,4CAGR,gCACK7B,OAAOc,QAAQQ,GAAQnB,MAAK,SAACsB,EAAGC,GACzB,OAAOD,EAAE,GAAKC,EAAE,MACjBC,KAAI,SAAAC,GACH,OACG,+BACK,6BAAKA,EAAM,KACX,6BAAKA,EAAM,GAAGlB,QAAQ,OAFlBkB,EAAM,SAQ9B,gCACI,+BACI,uCACA,6BAAK5B,OAAO+B,KAAKT,GAAQf,iBAIrC,kCACI,kCACI,oBAAIsB,UAAU,gBAAd,SACI,oBAAIC,QAAQ,IAAZ,gDAEJ,qBAAID,UAAU,eAAd,UACI,4CACA,4CAGR,gCACK7B,OAAOc,QAAQS,GAAQpB,MAAK,SAACsB,EAAGC,GACzB,OAAOD,EAAE,GAAKC,EAAE,MACjBC,KAAI,SAAAC,GACH,OACG,+BACK,6BAAKA,EAAM,KACX,6BAAKA,EAAM,GAAGlB,QAAQ,OAFlBkB,EAAM,SAQ9B,gCACI,+BACI,uCACA,6BAAK5B,OAAO+B,KAAKR,GAAQhB,iBAIrC,kCACI,kCACI,oBAAIsB,UAAU,gBAAd,SACI,oBAAIC,QAAQ,IAAZ,uCAEJ,qBAAID,UAAU,eAAd,UACI,4CACA,4CAGR,gCACK7B,OAAOc,QAAQU,GAAQrB,MAAK,SAACsB,EAAGC,GACzB,OAAOD,EAAE,GAAKC,EAAE,MACjBC,KAAI,SAAAC,GACH,OACG,+BACK,6BAAKA,EAAM,KACX,6BAAKA,EAAM,GAAGlB,QAAQ,OAFlBkB,EAAM,SAQ9B,gCACI,+BACI,uCACA,6BAAK5B,OAAO+B,KAAKP,GAAQjB,iBAIrC,cAAC,EAAD,CAAcL,kBAAmBA,QC7C9B8B,MA5Ef,WACE,IAAMC,EAAQ,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACzD,EAA4CC,mBAAS,OAArD,mBAAOf,EAAP,KAAuBgB,EAAvB,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA4BH,mBAAS,IAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAA4BL,mBAAS,IAArC,mBAAOM,EAAP,KAAeC,EAAf,KACA,EAA0CP,mBAAS,IAAnD,mBAAOnB,EAAP,KAAsB2B,EAAtB,KACIC,EAAe,GAEfC,GADO,IAAIC,MACQC,eAAe,QAAS,CAC3CC,KAAM,UACNC,MAAO,UACPC,IAAK,YA0CT,OAvCAC,qBAAU,WACFC,aAAaC,QAAb,UAAwBjC,EAAxB,YAA0CyB,MAC1CF,EAAiBW,KAAKC,MAAMH,aAAaC,QAAb,UAAwBjC,EAAxB,YAA0CyB,MACtEP,GAAa,GACbI,EAAU,YAGd,IAPY,eAOHnC,GACL,IARQ,eAQCiD,GACDtB,EAAM3B,KAAO2B,EAAMsB,IACnBC,MAAM,4EAAD,OAA6EvB,EAAM3B,GAAnF,YAAyF2B,EAAMsB,GAA/F,UACJE,MAAK,SAAAC,GACN,IAAKA,EAAIC,GAGL,MAFAtB,GAAa,GACbE,EAAU,+CACJ,IAAIqB,MAAO,+CAErB,OAAOF,EAAIG,UAEVJ,MAAK,SAAAK,GACF,IAAIC,EAAO,UAAM9B,EAAM3B,GAAGc,cAAf,YAAgCa,EAAMsB,GAAGnC,eAChDH,EAAQ6C,EAAK7B,EAAMsB,IACvBZ,EAAaoB,GAAW9C,EAExBoB,GAAa,MAEhB2B,OAAM,SAAAC,GACH5B,GAAa,GACbE,EAAU0B,EAAIC,aApBjBX,EAAI,EAAGA,EAAItB,EAAM1B,OAAQgD,IAAM,EAA/BA,IADJjD,EAAI,EAAGA,EAAI2B,EAAM1B,OAAQD,IAAM,EAA/BA,GA2BToC,EAAiBC,GACjBQ,aAAagB,QAAQvB,EAAaS,KAAKe,UAAUrD,IACjD0B,EAAU,aACX,IAGC,0BAASZ,UAAU,OAAnB,UACI,4DACA,iCACI,uBAAOwC,QAAQ,WAAf,sCACA,wBAAQC,KAAK,WAAWC,GAAG,WAAWC,aAAa,MAAMC,SAAU,SAACC,GAAD,OAAOvC,EAAkBuC,EAAEC,OAAO1D,QAArG,SACCgB,EAAMN,KAAI,SAAAiD,GACP,OACA,wBAAQ3D,MAAO2D,EAAiBL,GAAIK,EAApC,SAA2CA,EAAKxD,eAAtBwD,WAKjCxC,GAAa,mBAAGP,UAAU,aAAb,wBACbS,GAAU,mBAAGT,UAAU,aAAb,SAA4BS,IAC3B,YAAXE,EACD,cAAC,EAAD,CAAiBrB,eAAgBA,EAAgBJ,cAAeA,IAChE,mBAAGc,UAAU,aAAb,uCCrEVgD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.826dab8e.chunk.js","sourcesContent":["const LongestArray = (props) => {\r\n    const longestArr = () => {\r\n        let currRates = Object.values(props.outputConversions).sort();\r\n        currRates.forEach(rate => {\r\n            for (let i = currRates.length - 1; i >= 0; i--) {\r\n                if (Math.abs(currRates[i].toFixed(1) - rate.toFixed(1)) >= 0.6) {\r\n                    currRates.pop();\r\n                }\r\n            }\r\n        })\r\n\r\n        return currRates.length;\r\n    }\r\n\r\n    return (\r\n        <p>The amount of rates for the selected currency where exchange rates \r\n        differ among them by no more than 0.5 is <b>{longestArr()}</b>.</p>\r\n    );\r\n}\r\n \r\nexport default LongestArray;","import LongestArray from \"./LongestArray\";\r\n\r\nconst ConversionsData = (props) => {\r\n    let outputConversions = {};\r\n    for (let [key, value] of Object.entries(props.currencyRates)) {  \r\n        if (key.includes(props.selectedOption.toUpperCase())) {\r\n            if (!outputConversions.hasOwnProperty(props.selectedOption.toUpperCase())) {\r\n                outputConversions[key] = value;\r\n            } else {\r\n                outputConversions = {...outputConversions, [key]: value};\r\n            }\r\n        }\r\n    }\r\n\r\n    let group1 = {};\r\n    let group2 = {};\r\n    let group3 = {};\r\n\r\n    Object.entries(outputConversions).sort((a, b) => {\r\n        return a[1] - b[1];\r\n    }).map(entry => {\r\n        if (entry[1].toFixed(1) < 1) {\r\n           return group1[entry[0]] = entry[1];\r\n        } else if (entry[1].toFixed(1) >= 1 && entry[1].toFixed(1) < 1.5) {\r\n           return group2[entry[0]] = entry[1];\r\n        } else if (entry[1].toFixed(1) >= 1.5) {\r\n           return group3[entry[0]] = entry[1];\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <article className=\"conversions\">\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"table-heading\">\r\n                        <th colSpan=\"2\">Exchange Rates under 1</th>\r\n                    </tr>\r\n                    <tr className=\"col-headings\">\r\n                        <th>Currencies</th>\r\n                        <th>Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group1).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group1).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"table-heading\">\r\n                        <th colSpan=\"2\">Exchange Rates between 1 and 1.4</th>\r\n                    </tr>\r\n                    <tr className=\"col-headings\">\r\n                        <th>Currencies</th>\r\n                        <th>Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group2).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group2).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <table>\r\n                <thead>\r\n                    <tr className=\"table-heading\">\r\n                        <th colSpan=\"2\">Exchange Rates from 1.5</th>\r\n                    </tr>\r\n                    <tr className=\"col-headings\">\r\n                        <th>Currencies</th>\r\n                        <th>Rate</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.entries(group3).sort((a, b) => {\r\n                            return a[1] - b[1];\r\n                        }).map(entry => {\r\n                            return(\r\n                               <tr key={entry[0]}>\r\n                                    <td>{entry[0]}</td>\r\n                                    <td>{entry[1].toFixed(1)}</td>\r\n                               </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <td>Count</td>\r\n                        <td>{Object.keys(group3).length}</td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n            <LongestArray outputConversions={outputConversions}/>        \r\n        </article>\r\n    );\r\n}\r\n \r\nexport default ConversionsData;","import { useEffect, useState } from 'react';\nimport ConversionsData from './ConversionData';\n\nfunction App() {\n  const currs = [\"usd\", \"eur\", \"aud\", \"cad\", \"chf\", \"nzd\", \"bgn\"];\n  const [selectedOption, setSelectedOption] = useState(\"usd\");\n  const [isPending, setIsPending] = useState(true);\n  const [errorM, setErrorM] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [currencyRates, setCurrencyRates] = useState({});\n  let ratesDetails = {};\n  let date = new Date();\n  let currentDate = date.toLocaleString(\"az-AZ\", {  \n      year: \"numeric\",\n      month: \"2-digit\",\n      day: \"2-digit\"\n  })\n\n  useEffect(() => { \n      if (localStorage.getItem(`${selectedOption}-${currentDate}`)) {\n          setCurrencyRates(JSON.parse(localStorage.getItem(`${selectedOption}-${currentDate}`)));\n          setIsPending(false);\n          setStatus('success');\n      }\n\n      for (let i = 0; i < currs.length; i++) {\n          for (let j = 0; j < currs.length; j++) {\n              if (currs[i] !== currs[j]) {\n                  fetch(`https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/${currs[i]}/${currs[j]}.json`)\n                  .then(res => {\n                  if (!res.ok) {\n                      setIsPending(false);\n                      setErrorM(\"Could not peform the current fetch request.\");\n                      throw new Error (\"Could not peform the current fetch request.\")\n                  }\n                  return res.json();\n                  })\n                  .then(data => {\n                      let currKey = `${currs[i].toUpperCase()}-${currs[j].toUpperCase()}`;\n                      let value = data[currs[j]];\n                      ratesDetails[currKey] = value;\n          \n                      setIsPending(false);\n                  })\n                  .catch(err => {\n                      setIsPending(false);\n                      setErrorM(err.message);\n                  })  \n              }\n          }\n      }\n\n      setCurrencyRates(ratesDetails);\n      localStorage.setItem(currentDate, JSON.stringify(currencyRates));\n      setStatus(\"success\");\n  }, []);\n\n  return (\n      <section className=\"home\">\n          <h1>Exchange Rates Information</h1>    \n          <form>\n              <label htmlFor=\"currency\">See currency rates for: </label>\n              <select name=\"currency\" id=\"currency\" defaultValue=\"usd\" onChange={(e) => setSelectedOption(e.target.value)}>\n              {currs.map(curr => {\n                  return(\n                  <option value={curr} key={curr} id={curr}>{curr.toUpperCase()}</option>\n                  )\n              })}\n              </select>\n          </form>\n          {isPending && <p className=\"state-info\">Loading...</p>}\n          {errorM && <p className=\"state-info\">{ errorM }</p>}\n          {status === \"success\" ? \n          <ConversionsData selectedOption={selectedOption} currencyRates={currencyRates} /> : \n          <p className=\"state-info\">Something went wrong.</p>}\n      </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}